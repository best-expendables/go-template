version: '2'

services:
    app:
        build:
            context: .
            dockerfile: Application.Dockerfile
            args:
                IS_DEV_MODE: 1
                ACCESS_TOKEN_USR: ${ACCESS_TOKEN_USR}
                ACCESS_TOKEN_PWD: ${ACCESS_TOKEN_PWD}
        command: bash -c "./wait-for-it.sh appdb:5432 && /usr/local/bin/app/run_dev.sh"
        volumes: # volumes_from don't trigger inotify events
            - ./:/go/src/${REPO_HOST}/${PROJ_NAME}
            - ./docker/Application/bin:/usr/local/bin/app
        env_file:
            - docker/Application/env_files/main.env
        ports:
            - 8080:8080
        depends_on:
            - appdb
    appdb:
        image: postgres:9.6.2
        environment:
            POSTGRES_PASSWORD: app_pass
            POSTGRES_USER: app_user
            POSTGRES_DB: app_db
        ports:
            - 5432:5432
#    redis:
#        image: relaxart/kubernetes-redis-cluster
#        environment:
#            MASTER: "1"
#        ports:
#            - 6379:6379
#    sentinel:
#        image: relaxart/kubernetes-redis-cluster
#        environment:
#            SENTINEL: "1"
#            MASTER_IP: "redis"
#        ports:
#            - 26379
#        depends_on:
#            - redis
#    consumer:
#        build:
#            context: .
#            dockerfile: Application.Dockerfile
#            args:
#                IS_DEV_MODE: 1
#                ACCESS_TOKEN_USR: ${ACCESS_TOKEN_USR}
#                ACCESS_TOKEN_PWD: ${ACCESS_TOKEN_PWD}
#        command: "/usr/local/bin/app/consumer.sh"
#        volumes: # volumes_from don't trigger inotify events
#            - ./:/go/src/${REPO_HOST}/${PROJ_NAME}
#            - ./docker/Application/bin:/usr/local/bin/app
#        env_file:
#            - docker/Application/env_files/main.env
#        depends_on:
#            - app